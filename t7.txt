<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Time Management App</title>
    
    <style>
        body {
            /* Animated Gradient Background */
            background: linear-gradient(45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
            background-size: 400% 400%;
            animation: gradientAnimation 15s ease infinite;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 50px;
        }
        
        @keyframes gradientAnimation {
            0% {background-position: 0% 50%;}
            50% {background-position: 100% 50%;}
            100% {background-position: 0% 50%;}
        }

        /* Form Styles */
        form {
            padding: 50px;
            border-radius: 20px;
            box-shadow: 0;
        }

        .quadrant {
            padding: 10px;
            margin: 0; /* Removed margin */
            border-radius: 10px;
        }

        #urgent-important {
            background: red;
        }

        #important-noturgent {
            background: blue;
        }

        #urgent-notimportant {
            background: green;
        }

        #noturgent-notimportant {
            background: yellow;
        }

        .task {
            display: flex;
            align-items: center;
        }

        .task label {
            margin-right: 10px;
        }

        .checkbox-label {
            display: flex;
            align-items: center;
            flex-grow: 1; /* Allows the task label to take up the remaining space */
        }

        .delete-button {
            background-color: red;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 5px 10px;
            margin-right: 10px;
            cursor: pointer;
        }

        h1 {
            color: red; /* Added style to make the h1 heading red */
        }
    </style>
</head>
<body>
    <h1>STOP WASTING YOUR TIME AND LET'S GET GOING!!!</h1><img src="jazz.gif" width="50" height="50">
  
    <h2>Ensure the task entered is in the right priority setting:</h2>
    <audio id="backgroundAudio" src="whitenoise.mp3" loop></audio>
    <form>
        <label for="username">Username:</label><br>
        <input type="text" id="username"><br><br>
        <button type="button" id="login">Login</button>
    </form>
    <br>
    <form id="taskForm" style="display:none;">
        <label for="todo">To-Do List:</label><br>
        <input type="text" id="todo"><br><br>
        <label for="priority">Priority (Urgent/Important):</label><br>
        <select id="priority">
            <option value="urgent-important">Urgent/Important</option>
            <option value="important-noturgent">Important/Not Urgent</option>
            <option value="urgent-notimportant">Urgent/Not Important</option>
            <option value="noturgent-notimportant">Not Urgent/Not Important</option>
        </select><br><br>
        <label for="time">Estimated Time:</label><br>
        <input type="number" id="time"> minutes<br><br>
        <label for="workTime">Work Time (minutes):</label><br>
        <input type="number" id="workTime" value="25"><br><br>
        <label for="breakTime">Break Time (minutes):</label><br>
        <input type="number" id="breakTime" value="5"><br><br>
        <button type="button" id="addTask">Add Task</button>
    </form>
    <br>
    
    <img src="vid.gif" width="100" height="100">

    <div id="tasks">
        <h2>Tasks:</h2>
        <div class="quadrant" id="urgent-important">
            <h3>Urgent/Important</h3>
        </div>
        <div class="quadrant" id="important-noturgent">
            <h3>Important/Not Urgent</h3>
        </div>
        <div class="quadrant" id="urgent-notimportant">
            <h3>Urgent/Not Important</h3>
        </div>
        <div class="quadrant" id="noturgent-notimportant">
            <h3>Not Urgent/Not Important</h3>
        </div>
    </div>
        
    <div id="timer">
        <h2>Timer:</h2>
        <p id="timerText">00:00</p>
        <button id="startTimer">Start Timer</button>
        <button id="resetTimer">Reset Timer</button>
    </div>
        
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            let currentUser = localStorage.getItem("currentUser");

            if (currentUser) {
                document.getElementById("username").value = currentUser;
                loadTasks(currentUser);
                document.getElementById("taskForm").style.display = "block";
            }

            document.getElementById("login").addEventListener("click", function() {
                currentUser = document.getElementById("username").value;
                if (currentUser) {
                    localStorage.setItem("currentUser", currentUser);
                    loadTasks(currentUser);
                    document.getElementById("taskForm").style.display = "block";
                } else {
                    alert("Please enter a username.");
                }
            });

            document.getElementById("addTask").addEventListener("click", function() {
                const task = document.getElementById("todo").value;
                const priority = document.getElementById("priority").value;
                const estimatedTime = document.getElementById("time").value;

                if (task && estimatedTime) {
                    addTaskToUI(currentUser, task, priority, estimatedTime);
                    saveTask(currentUser, task, priority, estimatedTime);

                    document.getElementById("todo").value = "";
                    document.getElementById("time").value = "";
                } else {
                    alert("Please fill out both the task and estimated time.");
                }
            });

            let interval;
            let timeLeft;
            let isBreak = false;

            function startTimer() {
                if (!interval) {
                    let workTime = parseInt(document.getElementById("workTime").value) || 25;
                    let breakTime = parseInt(document.getElementById("breakTime").value) || 5;
                    timeLeft = workTime * 60;
                    interval = setInterval(updateTimer, 1000);
                    document.getElementById("backgroundAudio").play();
                }
            }

            function updateTimer() {
                if (timeLeft > 0) {
                    let minutes = Math.floor(timeLeft / 60);
                    let seconds = timeLeft % 60;
                    document.getElementById("timerText").textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
                    timeLeft--;
                } else {
                    clearInterval(interval);
                    interval = null;
                    if (isBreak) {
                        alert("Time to get back to work!");
                        isBreak = false;
                        timeLeft = (parseInt(document.getElementById("workTime").value) || 25) * 60;
                        document.getElementById("backgroundAudio").play();
                    } else {
                        alert("Great job! Take a break and relax.");
                        isBreak = true;
                        timeLeft = (parseInt(document.getElementById("breakTime").value) || 5) * 60;
                        document.getElementById("backgroundAudio").pause();
                    }
                    interval = setInterval(updateTimer, 1000);
                }
            }

            function resetTimer() {
                clearInterval(interval);
                interval = null;
                document.getElementById("timerText").textContent = "00:00";
                document.getElementById("backgroundAudio").pause();
                document.getElementById("backgroundAudio").currentTime = 0;
            }

            document.getElementById("startTimer").addEventListener("click", startTimer);
            document.getElementById("resetTimer").addEventListener("click", resetTimer);

            function saveTask(user, task, priority, estimatedTime) {
                let tasks = JSON.parse(localStorage.getItem(user)) || [];
                tasks.push({ task, priority, estimatedTime });
                localStorage.setItem(user, JSON.stringify(tasks));
            }

            function loadTasks(user) {
                let tasks = JSON.parse(localStorage.getItem(user)) || [];
                tasks.forEach(function(taskObj) {
                    const { task, priority, estimatedTime } = taskObj;
                    addTaskToUI(user, task, priority, estimatedTime);
                });
            }

            function addTaskToUI(user, task, priority, estimatedTime) {
                const taskContainer = document.createElement("div");
                const label = document.createElement("label");
                label.textContent = `${task} - Priority: ${priority} - Estimated Time: ${estimatedTime} minutes`;

                const checkbox = document.createElement("input");
                checkbox.setAttribute("type", "checkbox");

                const checkboxLabel = document.createElement("label");
                checkboxLabel.classList.add("checkbox-label");
                checkboxLabel.appendChild(checkbox);
                checkboxLabel.appendChild(label);

                const deleteButton = document.createElement("button");
                deleteButton.classList.add("delete-button");
                deleteButton.textContent = "Delete";

                deleteButton.addEventListener("click", function() {
                    taskContainer.remove();
                    deleteTask(user, task, priority, estimatedTime);
                });

                taskContainer.appendChild(deleteButton);
                taskContainer.appendChild(checkboxLabel);

                let taskList = document.getElementById(priority);
                taskList.appendChild(taskContainer);
            }

            function deleteTask(user, task, priority, estimatedTime) {
                let tasks = JSON.parse(localStorage.getItem(user)) || [];
                tasks = tasks.filter(t => t.task !== task || t.priority !== priority || t.estimatedTime !== estimatedTime);
                localStorage.setItem(user, JSON.stringify(tasks));
            }
        });
    </script>
</body>
</html>
